apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-agent-conf
  labels:
    app: fluent-bit
    component: fluent-bit-agent-conf
data:
  fluent-bit: |
    [SERVICE]
        Parsers_File ./parsers.conf
        Grace 15
    [INPUT]
        Name tail
        Path /var/log/containers/argocd-scripts*.log
        Exclude_Path /var/log/containers/*otel-collector*.log
        Parser cri
        Tag kube.*
        Mem_Buf_Limit 5MB
    [OUTPUT]
        Name  forward
        Host  0.0.0.0
        Port  8006
        Match *
  parsers: |
    [PARSER]
        Name        jupiter_one
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ
        Time_Keep   On
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-agent-conf
  labels:
    app: opentelemetry
    component: otel-agent-conf
data:
  otel-agent-config: |
    receivers:
      hostmetrics:
        collection_interval: 10s
        scrapers:
          cpu:
          load:
          memory:
          disk:
          filesystem:
          network:
          paging:
          processes:
      otlp:
        protocols:
          grpc:
          http:
      fluentforward:
        endpoint: 0.0.0.0:8006

    processors:
      batch:
      memory_limiter:
        limit_mib: 400
        spike_limit_mib: 100
        check_interval: 5s

    exporters:
      logging:
        loglevel: debug
        sampling_initial: 5
        sampling_thereafter: 200

    extensions:
      memory_ballast:
        size_mib: 165

    service:
      pipelines:
        logs:
          receivers: [fluentforward]
          processors: [memory_limiter, batch]
          exporters: [logging]
        metrics:
          receivers: [hostmetrics]
          processors: [memory_limiter, batch]
          exporters: [logging]
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
---
apiVersion: {{ template "cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ template "argocd-scripts.fullname" . }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  jobTemplate:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "argocd-scripts.labels" . | nindent 12 }}
    spec:
      template:
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: Never
          serviceAccountName: {{ include "argocd-scripts.serviceAccountName" . }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ end }}
          initContainers:
            - name: kubexit
              image: cortexlabs/kubexit:0.40.0
              command: ['cp']
              args: ['/bin/kubexit', '/kubexit/kubexit']
              volumeMounts:
                - mountPath: /kubexit
                  name: kubexit
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ['/kubexit/kubexit', 'yarn']
              args: ['execute']
              env:
                - name: KUBEXIT_NAME
                  value: argocd-scripts
                - name: KUBEXIT_GRAVEYARD
                  value: /graveyard
                - name: KUBEXIT_BIRTH_DEPS
                  value: fluent-bit,otel-collector
                - name: KUBEXIT_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: KUBEXIT_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ACCESS_TYPE
                  value: {{ ternary "cluster" "namespace" .Values.rbac.useClusterRole }}
                - name: NAMESPACE
                  value: {{ .Release.Namespace }}
                - name: JUPITERONE_ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ (tpl .Values.existingSecret.name .) | default (include "argocd-scripts.fullname" .) }}
                      key: {{ .Values.existingSecret.jupiteroneAccountIdSecretKey | default "jupiteroneAccountId" }}
                - name: JUPITERONE_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ (tpl .Values.existingSecret.name .) | default (include "argocd-scripts.fullname" .) }}
                      key: {{ .Values.existingSecret.jupiteroneApiKeySecretKey | default "jupiteroneApiKey" }}
                - name: JUPITERONE_API_BASE_URL
                  value: {{ template "settings.baseApiUrl" . }}
                - name: INTEGRATION_INSTANCE_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ (tpl .Values.existingSecret.name .) | default (include "argocd-scripts.fullname" .) }}
                      key: {{ .Values.existingSecret.jupiteroneIntegrationInstanceIdSecretKey | default "jupiteroneIntegrationInstanceId" }}
                - name: LOAD_KUBERNETES_CONFIG_FROM_DEFAULT
                  value: 'false'
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
                - mountPath: /graveyard
                  name: graveyard
                - mountPath: /kubexit
                  name: kubexit
            - name: otel-collector
              image: otel/opentelemetry-collector-contrib:0.58.0
              imagePullPolicy: IfNotPresent
              command: ['/kubexit/kubexit', '/otelcol-contrib']
              args: ['--config=/conf/otel-agent-config.yaml']
              env:
                - name: KUBEXIT_NAME
                  value: otel-collector
                - name: KUBEXIT_GRAVEYARD
                  value: /graveyard
                - name: KUBEXIT_DEATH_DEPS
                  value: fluent-bit
                - name: KUBEXIT_GRACE_PERIOD
                  value: "10s"  
                - name: KUBEXIT_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: KUBEXIT_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              volumeMounts:
                - name: otel-agent-config-vol
                  mountPath: /conf
                - mountPath: /graveyard
                  name: graveyard
                - mountPath: /kubexit
                  name: kubexit
            - name: fluent-bit
              image: fluent/fluent-bit:1.8
              imagePullPolicy: IfNotPresent
              command: ['/kubexit/kubexit', '/fluent-bit/bin/fluent-bit']
              args: ['--config=/fluent-bit/etc/fluent-bit.conf']
              env:
                - name: KUBEXIT_NAME
                  value: fluent-bit
                - name: KUBEXIT_GRAVEYARD
                  value: /graveyard
                - name: KUBEXIT_GRACE_PERIOD
                  value: "10s"
                - name: KUBEXIT_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: KUBEXIT_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: KUBEXIT_BIRTH_DEPS
                  value: otel-collector       
                - name: KUBEXIT_DEATH_DEPS
                  value: argocd-scripts
              volumeMounts:
                - name: log-storage
                  mountPath: /mnt/log/
                  readOnly: true
                - name: fluent-bit-agent-config-vol
                  mountPath: /fluent-bit/etc/
                - mountPath: /graveyard
                  name: graveyard
                - mountPath: /kubexit
                  name: kubexit
                - name: varlog
                  mountPath: /var/log
                  readOnly: true
                - name: varlibdockercontainers
                  mountPath: /var/lib/docker/containers
                  readOnly: true
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          terminationGracePeriodSeconds: 60
          volumes:
            - name: fluent-bit-agent-config-vol
              configMap:
                name: fluent-bit-agent-conf
                items:
                  - key: fluent-bit
                    path: fluent-bit.conf
                  - key: parsers
                    path: parsers.conf
            - name: otel-agent-config-vol
              configMap:
                name: otel-agent-conf
                items:
                  - key: otel-agent-config
                    path: otel-agent-config.yaml
            - name: graveyard
              emptyDir:
                medium: Memory
            - name: kubexit
              emptyDir: {}
            - name: log-storage
              emptyDir: {}
            - name: varlog
              hostPath:
                path: /var/log
            - name: varlibdockercontainers
              hostPath:
                path: /var/lib/docker/containers